generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model for storing game images
model GameImage {
  id             String @id @default(uuid())
  name           String @unique
  description    String
  imageUrl       String @unique
  publicId       String @unique
  originalWidth  Int
  originalHeight Int

  characterLocations CharacterLocation[]
  gameCompletions    GameCompletion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Model for storing the locations of characters on each GameImage
model CharacterLocation {
  id            String @id @default(uuid())
  characterName String

  targetXRatio    Float
  targetYRatio    Float
  toleranceXRatio Float
  toleranceYRatio Float

  gameImage   GameImage @relation(fields: [gameImageId], references: [id], onDelete: Cascade)
  gameImageId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([gameImageId, characterName])
}

// Model for storing game completion records
model GameCompletion {
  id               String @id @default(uuid())
  playerName       String
  timeTakenSeconds Float

  gameImage   GameImage @relation(fields: [gameImageId], references: [id], onDelete: Cascade)
  gameImageId String

  completedAt DateTime @default(now())
}
